#include <iostream>
#include <vector>
using namespace std;

void enterVect(vector<vector<int>>& arr);            
void vectSwp(int n, vector<vector<int>>& arr);       
void showVect(vector<vector<int>> arr);                
void localMins(vector<vector<int>> arr);            
int     vectSum(vector<vector<int>> arr);              


int main()
{
    int cols;
    int rows;
    int n;
    cout << "enter matrix size" << endl;

    cin >> cols;
    cin >> rows;

    n = cols;
    vector<vector<int>> arr(cols, vector <int>(rows));

    enterVect(arr);
    vectSwp(n, arr);
    showVect(arr);
    localMins(arr);
    int a = vectSum(arr);
    cout << "sum : " << a << endl;
}

void enterVect(vector<vector<int>>& arr)
{
    cout << "Enter values" << endl;
    for (int i = 0; i < arr.size(); i++)
    {
        for (int j = 0; j < arr.size(); j++)
        {
            cin >> arr[i][j];
        }
    }
    cout << endl;
}

void vectSwp(int n, vector<vector<int>>& arr)
{
    for (int i = 0; i < arr.size(); i++)
    {
        for (int j = 0; j < arr.size(); j++)
        {
            arr[i][j] = arr[n - j - 1][n - i - 1];
        }
    }
}

void showVect(vector<vector<int>> arr)
{
    for (int i = 0; i < arr.size(); i++)
    {
        for (int j = 0; j < arr.size(); j++)
        {
            cout << arr[i][j] << " ";
        }
        cout << endl;
    }
    cout << endl;
}

void localMins(vector<vector<int>> arr)
{
    cout << "Local mins ";
    for (int i = 0; i < arr.size(); i++)
    {
        for (int j = 1; j < arr.size() - 1; j++)
        {
            if (arr[i][j] < arr[i][j - 1] && arr[i][j] < arr[i][j + 1])
            {
                cout << arr[i][j];
            }
        }
    }
    cout << endl;
}

int vectSum(vector<vector<int>> arr)
{
    int sum = 0;
    for (int i = 0; i < arr.size() - 1; i++)
    {
        for (int j = 1 + i; j < arr.size(); j++)
        {
            sum = sum + fabs(arr[i][j]);
        }
    }
    return sum;
}
